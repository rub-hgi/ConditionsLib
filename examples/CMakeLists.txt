set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
find_package(ConditionsLib REQUIRED)

find_library(NTL ntl)
if(NOT NTL)
  message(FATAL_ERROR "Could not find the ntl library. Set CMAKE_LIBRARY_PATH appropriately.")
else()
  message("Ntl libary located in ${NTL}")
endif()

find_library(GMP gmp)
if(NOT GMP)
  message(FATAL_ERROR "Could not find the gmp library. Set CMAKE_LIBRARY_PATH appropriately.")
else()
  message("Gmp libary located in ${GMP}")
endif()

# General

add_executable(dimension4sboxes dimension4sboxes.cc)
add_executable(dimension3experiments dimension3experiments.cc)
add_executable(dimension4experiments dimension4experiments.cc)
add_executable(dimension5experiments dimension5experiments.cc)
add_executable(dimension6experiments dimension6experiments.cc)
add_executable(dimension4timing dimension4timing.cc)
add_executable(dimension5timing dimension5timing.cc)
add_executable(dimension6timing dimension6timing.cc)
add_executable(dimension7timing dimension7timing.cc)

target_link_libraries(dimension4sboxes ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension3experiments ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension4experiments ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension5experiments ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension6experiments ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension4timing ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension5timing ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension6timing ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(dimension7timing ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)

# Cipher-specific

add_executable(trees_des trees_des.cc)
add_executable(trees_gift_f_delta trees_gift_f_delta.cc)
add_executable(trees_noekeon trees_noekeon.cc)
add_executable(trees_present trees_present.cc)
add_executable(trees_rectangle trees_rectangle.cc)
add_executable(trees_rectangle_f_delta trees_rectangle_f_delta.cc)
add_executable(trees_rectangle_fixed_components trees_rectangle_fixed_components.cc)
add_executable(trees_noekeon_fixed_components trees_noekeon_fixed_components.cc)
add_executable(trees_rectangle_multiple_outputs trees_rectangle_multiple_outputs.cc)
add_executable(g_delta_Delta g_delta_Delta.cc)

target_link_libraries(trees_des ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_gift_f_delta ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_noekeon ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_present ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_rectangle ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_rectangle_f_delta ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_rectangle_fixed_components ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_noekeon_fixed_components ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(trees_rectangle_multiple_outputs ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
target_link_libraries(g_delta_Delta ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)

# Linking omp
find_package(OpenMP)
if(OpenMP_CXX_FOUND)
    add_executable(trees_serpent trees_serpent.cc)
    target_link_libraries(trees_serpent ConditionsLib::ConditionsLib ${NTL} ${GMP} Threads::Threads)
    target_link_libraries(trees_serpent OpenMP::OpenMP_CXX)
endif()